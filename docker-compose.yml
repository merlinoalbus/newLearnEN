# =====================================================
# 🐳 docker-compose.yml - LearnEnglishVOC (Updated with ENV support)
# =====================================================

version: '3.8'

networks:
  learnenglishvoc_network:
    driver: bridge

services:
  # ====== PRODUCTION SERVICE (existing) ======
  learnenglishvoc:
    container_name: learnenglishvoc
    image: ghcr.io/merlinoalbus/learnenglishvoc:latest
    
    # ====== ENVIRONMENT VARIABLES (NUOVO) ======
    environment:
      # CRITICO: API key deve essere passata dall'esterno
      # Usa: export REACT_APP_GEMINI_API_KEY=your_key prima di docker-compose up
      - REACT_APP_GEMINI_API_KEY=${REACT_APP_GEMINI_API_KEY}
      
      # Configurazione production
      - REACT_APP_ENVIRONMENT=production
      - REACT_APP_DEBUG_LOGGING=false
      - REACT_APP_ENABLE_AI_FEATURES=true
      - REACT_APP_AI_TIMEOUT=15000
      - REACT_APP_AI_MAX_RETRIES=3
      - REACT_APP_MOCK_AI_RESPONSES=false
    
    # ====== RESOURCE LIMITS (existing) ======
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    
    # ====== NETWORKING & PORTS (existing) ======
    networks:
      - learnenglishvoc_network
    ports:
      - '12345:80'
    
    # ====== RELIABILITY ======
    restart: unless-stopped
    
    # ====== HEALTH CHECK (NUOVO) ======
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health", "||", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  # ====== DEVELOPMENT SERVICE (NUOVO - opzionale) ======
  learnenglishvoc-dev:
    profiles: ["dev"]
    container_name: learnenglishvoc-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    
    environment:
      - REACT_APP_GEMINI_API_KEY=${REACT_APP_GEMINI_API_KEY}
      - REACT_APP_ENVIRONMENT=development
      - REACT_APP_DEBUG_LOGGING=true
      - REACT_APP_ENABLE_AI_FEATURES=true
      - REACT_APP_MOCK_AI_RESPONSES=false
    
    # Carica da .env.local se esiste (per development)
    env_file:
      - .env.local
    
    ports:
      - '3000:3000'
    
    volumes:
      - .:/app
      - /app/node_modules
    
    networks:
      - learnenglishvoc_network
    
    command: npm start

  # ====== STAGING SERVICE (NUOVO - opzionale) ======
  learnenglishvoc-staging:
    profiles: ["staging"]
    container_name: learnenglishvoc-staging
    image: ghcr.io/merlinoalbus/learnenglishvoc:latest
    
    environment:
      - REACT_APP_GEMINI_API_KEY=${REACT_APP_GEMINI_API_KEY}
      - REACT_APP_ENVIRONMENT=staging
      - REACT_APP_DEBUG_LOGGING=true
      - REACT_APP_ENABLE_AI_FEATURES=true
      - REACT_APP_AI_TIMEOUT=15000
      - REACT_APP_AI_MAX_RETRIES=3
    
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    
    networks:
      - learnenglishvoc_network
    
    ports:
      - '8080:80'
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

# =====================================================
# 🔐 DEPLOYMENT INSTRUCTIONS:
# 
# PRODUCTION (existing service):
# export REACT_APP_GEMINI_API_KEY=your_production_api_key
# docker-compose up -d learnenglishvoc
# 
# DEVELOPMENT (new service):
# echo "REACT_APP_GEMINI_API_KEY=your_dev_key" > .env.local
# docker-compose --profile dev up
# 
# STAGING (new service):
# export REACT_APP_GEMINI_API_KEY=your_staging_key
# docker-compose --profile staging up -d
# 
# CHECK STATUS:
# docker-compose ps
# docker-compose logs learnenglishvoc
# 
# =====================================================